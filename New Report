REPORT zreport_rnp.

TABLES: mara, marc, mapl, afko, aufk.

TYPES: BEGIN OF ty_final,
         aufnr TYPE aufnr,
         aufpl TYPE co_aufpl,
         posnr TYPE posnr,
         projn TYPE projn,
         objnr TYPE objnr,
         aplzl TYPE co_aplzl,
         plnfl TYPE plnfolge,
         vornr TYPE vornr,
         psphi TYPE prps-psphi,
         pspnr TYPE proj-pspnr,
         pspid TYPE proj-pspid,
         stat  TYPE jest-stat,
         txt04 TYPE tj02t-txt04,
       END OF ty_final.

DATA: lt_final TYPE STANDARD TABLE OF ty_final.



DATA: lo_alv TYPE REF TO cl_salv_table.
SELECT-OPTIONS: s_matnr FOR mara-matnr OBLIGATORY,
                s_werks FOR marc-werks OBLIGATORY.

START-OF-SELECTION.

  SELECT mara~matnr, marc~werks, mapl~plnnr, mapl~plnal
    FROM mara
    INNER JOIN marc ON mara~matnr = marc~matnr
    INNER JOIN mapl ON marc~matnr = mapl~matnr AND marc~werks = mapl~werks
    INTO TABLE @DATA(lt_mapl_materials)
    WHERE mara~matnr IN @s_matnr
      AND marc~werks IN @s_werks.

  IF sy-subrc = 0.

    SELECT afko~aufnr,
           afko~aufpl,
           afpo~posnr,
           afpo~projn,
           aufk~objnr,
           afvc~aplzl,
           afvc~plnfl,
           afvc~vornr
      FROM afko AS afko
      INNER JOIN afpo ON afko~aufnr = afpo~aufnr
      INNER JOIN aufk ON afko~aufnr = aufk~aufnr
      INNER JOIN afvc ON afko~aufpl = afvc~aufpl
      INTO TABLE @DATA(lt_materials)
      FOR ALL ENTRIES IN @lt_mapl_materials
      WHERE afko~plnnr = @lt_mapl_materials-plnnr
        AND afko~plnal = @lt_mapl_materials-plnal.

    IF sy-subrc IS INITIAL.

      SELECT prps~psphi,
           proj~pspnr,
           proj~pspid
        FROM prps AS prps
        INNER JOIN proj ON prps~psphi = proj~pspnr
        INTO TABLE @DATA(lt_proj)
        FOR ALL ENTRIES IN @lt_materials
        WHERE prps~pspnr = @lt_materials-projn.

      SELECT jest~stat,
             tj02t~txt04
        FROM jest AS jest
        INNER JOIN tj02t AS tj02t ON jest~stat = tj02t~istat
        INTO TABLE @DATA(lt_stat)
        FOR ALL ENTRIES IN @lt_materials
        WHERE jest~objnr = @lt_materials-objnr
        AND tj02t~spras = 'E'
        AND tj02t~txt04 IN ('TECO','CONF','CNF').


      " Call the factory method to create an instance of the ALV table
      TRY.
          cl_salv_table=>factory(
            IMPORTING
              r_salv_table = lo_alv
            CHANGING
              t_table      = lt_materials ).
        CATCH cx_salv_msg INTO DATA(lx_msg).
          WRITE: / 'Error generating ALV report:', lx_msg->get_text( ).
          RETURN.
      ENDTRY.

      " Set some properties for the ALV grid display
      lo_alv->get_columns( )->set_optimize( abap_true ).

      " Display the ALV grid
      TRY.
          lo_alv->display( ).
        CATCH cx_salv_msg INTO lx_msg.
          " Handle the exception if the ALV could not be displayed
          WRITE: / 'Error displaying ALV report:', lx_msg->get_text( ).
      ENDTRY.
    ELSE.
      WRITE: / 'No data available to display.'.
    ENDIF.
  ENDIF.
